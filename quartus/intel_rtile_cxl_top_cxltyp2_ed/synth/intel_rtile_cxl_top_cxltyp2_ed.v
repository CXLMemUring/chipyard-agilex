// intel_rtile_cxl_top_cxltyp2_ed.v

// Generated using ACDS version 22.3 104

`timescale 1 ps / 1 ps
module intel_rtile_cxl_top_cxltyp2_ed (
		input  wire         refclk0,                           //             refclk0.clk
		input  wire         refclk1,                           //             refclk1.clk
		input  wire         refclk4,                           //             refclk4.clk
		input  wire         resetn,                            //              resetn.reset_n
		input  wire         nInit_done,                        //          ninit_done.ninit_done
		output wire         ip2hdm_clk,                        //          ip2hdm_clk.clk
		output wire         ip2hdm_reset_n,                    //      ip2hdm_reset_n.reset_n
		output wire         cxl_warm_rst_n,                    //      cxl_warm_rst_n.reset_n
		output wire         cxl_cold_rst_n,                    //      cxl_cold_rst_n.reset_n
		input  wire [35:0]  hdm_size_256mb,                    //            hdm_size.hdm_size_t
		input  wire [63:0]  mc2ip_memsize,                     //                    .mem_size_t
		input  wire [15:0]  cxl_rx_n,                          //              cxl_rx.cxl_rx_n
		input  wire [15:0]  cxl_rx_p,                          //                    .cxl_rx_p
		output wire [15:0]  cxl_tx_n,                          //              cxl_tx.cxl_tx_n
		output wire [15:0]  cxl_tx_p,                          //                    .cxl_tx_p
		input  wire [4:0]   mc2ip_0_sr_status,                 //             mc2ip_0.mc_sr_status
		input  wire         mc2ip_0_rspfifo_full,              //                    .rspfifo_full
		input  wire         mc2ip_0_rspfifo_empty,             //                    .rspfifo_empty
		input  wire [5:0]   mc2ip_0_rspfifo_fill_level,        //                    .rspfifo_fill_level
		input  wire         mc2ip_0_reqfifo_full,              //                    .reqfifo_full
		input  wire         mc2ip_0_reqfifo_empty,             //                    .reqfifo_empty
		input  wire [5:0]   mc2ip_0_reqfifo_fill_level,        //                    .reqfifo_fill_level
		input  wire         hdm2ip_avmm0_cxlmem_ready,         //            hdm2ip_0.cxlmem_ready
		input  wire         hdm2ip_avmm0_ready,                //                    .ready
		input  wire [511:0] hdm2ip_avmm0_readdata,             //                    .readdata
		input  wire [13:0]  hdm2ip_avmm0_rsp_mdata,            //                    .rsp_mdata
		input  wire         hdm2ip_avmm0_read_poison,          //                    .read_poison
		input  wire         hdm2ip_avmm0_readdatavalid,        //                    .readdatavalid
		input  wire [7:0]   hdm2ip_avmm0_ecc_err_corrected,    //                    .ecc_err_corrected
		input  wire [7:0]   hdm2ip_avmm0_ecc_err_detected,     //                    .ecc_err_detected
		input  wire [7:0]   hdm2ip_avmm0_ecc_err_fatal,        //                    .ecc_err_fatal
		input  wire [7:0]   hdm2ip_avmm0_ecc_err_syn_e,        //                    .ecc_err_syn_e
		input  wire         hdm2ip_avmm0_ecc_err_valid,        //                    .ecc_err_valid
		output wire         ip2hdm_avmm0_read,                 //            ip2hdm_0.read
		output wire         ip2hdm_avmm0_write,                //                    .write
		output wire         ip2hdm_avmm0_write_poison,         //                    .write_poison
		output wire         ip2hdm_avmm0_write_ras_sbe,        //                    .write_ras_sbe
		output wire         ip2hdm_avmm0_write_ras_dbe,        //                    .write_ras_dbe
		output wire [511:0] ip2hdm_avmm0_writedata,            //                    .writedata
		output wire [63:0]  ip2hdm_avmm0_byteenable,           //                    .byteenable
		output wire [45:0]  ip2hdm_avmm0_address,              //                    .address
		output wire [13:0]  ip2hdm_avmm0_req_mdata,            //                    .req_mdata
		input  wire [4:0]   mc2ip_1_sr_status,                 //             mc2ip_1.mc_sr_status
		input  wire         mc2ip_1_rspfifo_full,              //                    .rspfifo_full
		input  wire         mc2ip_1_rspfifo_empty,             //                    .rspfifo_empty
		input  wire [5:0]   mc2ip_1_rspfifo_fill_level,        //                    .rspfifo_fill_level
		input  wire         mc2ip_1_reqfifo_full,              //                    .reqfifo_full
		input  wire         mc2ip_1_reqfifo_empty,             //                    .reqfifo_empty
		input  wire [5:0]   mc2ip_1_reqfifo_fill_level,        //                    .reqfifo_fill_level
		input  wire         hdm2ip_avmm1_cxlmem_ready,         //            hdm2ip_1.cxlmem_ready
		input  wire         hdm2ip_avmm1_ready,                //                    .ready
		input  wire [511:0] hdm2ip_avmm1_readdata,             //                    .readdata
		input  wire [13:0]  hdm2ip_avmm1_rsp_mdata,            //                    .rsp_mdata
		input  wire         hdm2ip_avmm1_read_poison,          //                    .read_poison
		input  wire         hdm2ip_avmm1_readdatavalid,        //                    .readdatavalid
		input  wire [7:0]   hdm2ip_avmm1_ecc_err_corrected,    //                    .ecc_err_corrected
		input  wire [7:0]   hdm2ip_avmm1_ecc_err_detected,     //                    .ecc_err_detected
		input  wire [7:0]   hdm2ip_avmm1_ecc_err_fatal,        //                    .ecc_err_fatal
		input  wire [7:0]   hdm2ip_avmm1_ecc_err_syn_e,        //                    .ecc_err_syn_e
		input  wire         hdm2ip_avmm1_ecc_err_valid,        //                    .ecc_err_valid
		output wire         ip2hdm_avmm1_read,                 //            ip2hdm_1.read
		output wire         ip2hdm_avmm1_write,                //                    .write
		output wire         ip2hdm_avmm1_write_poison,         //                    .write_poison
		output wire         ip2hdm_avmm1_write_ras_sbe,        //                    .write_ras_sbe
		output wire         ip2hdm_avmm1_write_ras_dbe,        //                    .write_ras_dbe
		output wire [511:0] ip2hdm_avmm1_writedata,            //                    .writedata
		output wire [63:0]  ip2hdm_avmm1_byteenable,           //                    .byteenable
		output wire [45:0]  ip2hdm_avmm1_address,              //                    .address
		output wire [13:0]  ip2hdm_avmm1_req_mdata,            //                    .req_mdata
		input  wire         afu_cam_ext5,                      //         afu2cam_ext.ext5
		input  wire         afu_cam_ext6,                      //                    .ext6
		output wire         cam_afu_ext5,                      //         cam2afu_ext.ext5
		output wire         cam_afu_ext6,                      //                    .ext6
		output wire         resetprep_en,                      //             quiesce.resetprep_en
		output wire         bfe_afu_quiesce_req,               //                    .quiesce_req
		input  wire         afu_bfe_quiesce_ack,               //                    .quiesce_ack
		input  wire [11:0]  cafu2ip_aximm0_awid,               // axi2ccip_wraddr_ch0.awid
		input  wire [63:0]  cafu2ip_aximm0_awaddr,             //                    .awaddr
		input  wire [9:0]   cafu2ip_aximm0_awlen,              //                    .awlen
		input  wire [2:0]   cafu2ip_aximm0_awsize,             //                    .awsize
		input  wire [1:0]   cafu2ip_aximm0_awburst,            //                    .awburst
		input  wire [2:0]   cafu2ip_aximm0_awprot,             //                    .awprot
		input  wire [3:0]   cafu2ip_aximm0_awqos,              //                    .awqos
		input  wire [4:0]   cafu2ip_aximm0_awuser,             //                    .awuser
		input  wire         cafu2ip_aximm0_awvalid,            //                    .awvalid
		input  wire [3:0]   cafu2ip_aximm0_awcache,            //                    .awcache
		input  wire [1:0]   cafu2ip_aximm0_awlock,             //                    .awlock
		input  wire [3:0]   cafu2ip_aximm0_awregion,           //                    .awregion
		output wire         ip2cafu_aximm0_awready,            //                    .awready
		input  wire [11:0]  cafu2ip_aximm1_awid,               // axi2ccip_wraddr_ch1.awid
		input  wire [63:0]  cafu2ip_aximm1_awaddr,             //                    .awaddr
		input  wire [9:0]   cafu2ip_aximm1_awlen,              //                    .awlen
		input  wire [2:0]   cafu2ip_aximm1_awsize,             //                    .awsize
		input  wire [1:0]   cafu2ip_aximm1_awburst,            //                    .awburst
		input  wire [2:0]   cafu2ip_aximm1_awprot,             //                    .awprot
		input  wire [3:0]   cafu2ip_aximm1_awqos,              //                    .awqos
		input  wire [4:0]   cafu2ip_aximm1_awuser,             //                    .awuser
		input  wire         cafu2ip_aximm1_awvalid,            //                    .awvalid
		input  wire [3:0]   cafu2ip_aximm1_awcache,            //                    .awcache
		input  wire [1:0]   cafu2ip_aximm1_awlock,             //                    .awlock
		input  wire [3:0]   cafu2ip_aximm1_awregion,           //                    .awregion
		output wire         ip2cafu_aximm1_awready,            //                    .awready
		input  wire [511:0] cafu2ip_aximm0_wdata,              // axi2ccip_wrdata_ch0.wdata
		input  wire [63:0]  cafu2ip_aximm0_wstrb,              //                    .wstrb
		input  wire         cafu2ip_aximm0_wlast,              //                    .wlast
		input  wire         cafu2ip_aximm0_wuser,              //                    .wuser
		input  wire         cafu2ip_aximm0_wvalid,             //                    .wvalid
		output wire         ip2cafu_aximm0_wready,             //                    .wready
		input  wire [511:0] cafu2ip_aximm1_wdata,              // axi2ccip_wrdata_ch1.wdata
		input  wire [63:0]  cafu2ip_aximm1_wstrb,              //                    .wstrb
		input  wire         cafu2ip_aximm1_wlast,              //                    .wlast
		input  wire         cafu2ip_aximm1_wuser,              //                    .wuser
		input  wire         cafu2ip_aximm1_wvalid,             //                    .wvalid
		output wire         ip2cafu_aximm1_wready,             //                    .wready
		output wire [11:0]  ip2cafu_aximm0_bid,                //  axi2ccip_wrrsp_ch0.bid
		output wire [1:0]   ip2cafu_aximm0_bresp,              //                    .bresp
		output wire [3:0]   ip2cafu_aximm0_buser,              //                    .buser
		output wire         ip2cafu_aximm0_bvalid,             //                    .bvalid
		input  wire         cafu2ip_aximm0_bready,             //                    .bready
		output wire [11:0]  ip2cafu_aximm1_bid,                //  axi2ccip_wrrsp_ch1.bid
		output wire [1:0]   ip2cafu_aximm1_bresp,              //                    .bresp
		output wire [3:0]   ip2cafu_aximm1_buser,              //                    .buser
		output wire         ip2cafu_aximm1_bvalid,             //                    .bvalid
		input  wire         cafu2ip_aximm1_bready,             //                    .bready
		input  wire [11:0]  cafu2ip_aximm0_arid,               // axi2ccip_rdaddr_ch0.arid
		input  wire [63:0]  cafu2ip_aximm0_araddr,             //                    .araddr
		input  wire [9:0]   cafu2ip_aximm0_arlen,              //                    .arlen
		input  wire [2:0]   cafu2ip_aximm0_arsize,             //                    .arsize
		input  wire [1:0]   cafu2ip_aximm0_arburst,            //                    .arburst
		input  wire [2:0]   cafu2ip_aximm0_arprot,             //                    .arprot
		input  wire [3:0]   cafu2ip_aximm0_arqos,              //                    .arqos
		input  wire [4:0]   cafu2ip_aximm0_aruser,             //                    .aruser
		input  wire         cafu2ip_aximm0_arvalid,            //                    .arvalid
		input  wire [3:0]   cafu2ip_aximm0_arcache,            //                    .arcache
		input  wire [1:0]   cafu2ip_aximm0_arlock,             //                    .arlock
		input  wire [3:0]   cafu2ip_aximm0_arregion,           //                    .arregion
		output wire         ip2cafu_aximm0_arready,            //                    .arready
		input  wire [11:0]  cafu2ip_aximm1_arid,               // axi2ccip_rdaddr_ch1.arid
		input  wire [63:0]  cafu2ip_aximm1_araddr,             //                    .araddr
		input  wire [9:0]   cafu2ip_aximm1_arlen,              //                    .arlen
		input  wire [2:0]   cafu2ip_aximm1_arsize,             //                    .arsize
		input  wire [1:0]   cafu2ip_aximm1_arburst,            //                    .arburst
		input  wire [2:0]   cafu2ip_aximm1_arprot,             //                    .arprot
		input  wire [3:0]   cafu2ip_aximm1_arqos,              //                    .arqos
		input  wire [4:0]   cafu2ip_aximm1_aruser,             //                    .aruser
		input  wire         cafu2ip_aximm1_arvalid,            //                    .arvalid
		input  wire [3:0]   cafu2ip_aximm1_arcache,            //                    .arcache
		input  wire [1:0]   cafu2ip_aximm1_arlock,             //                    .arlock
		input  wire [3:0]   cafu2ip_aximm1_arregion,           //                    .arregion
		output wire         ip2cafu_aximm1_arready,            //                    .arready
		output wire [11:0]  ip2cafu_aximm0_rid,                //  axi2ccip_rdrsp_ch0.rid
		output wire [511:0] ip2cafu_aximm0_rdata,              //                    .rdata
		output wire [1:0]   ip2cafu_aximm0_rresp,              //                    .rresp
		output wire         ip2cafu_aximm0_rlast,              //                    .rlast
		output wire         ip2cafu_aximm0_ruser,              //                    .ruser
		output wire         ip2cafu_aximm0_rvalid,             //                    .rvalid
		input  wire         cafu2ip_aximm0_rready,             //                    .rready
		output wire [11:0]  ip2cafu_aximm1_rid,                //  axi2ccip_rdrsp_ch1.rid
		output wire [511:0] ip2cafu_aximm1_rdata,              //                    .rdata
		output wire [1:0]   ip2cafu_aximm1_rresp,              //                    .rresp
		output wire         ip2cafu_aximm1_rlast,              //                    .rlast
		output wire         ip2cafu_aximm1_ruser,              //                    .ruser
		output wire         ip2cafu_aximm1_rvalid,             //                    .rvalid
		input  wire         cafu2ip_aximm1_rready,             //                    .rready
		output wire         ip2csr_avmm_clk,                   //             afu_csr.clk
		output wire         ip2csr_avmm_rstn,                  //                    .rst_n
		input  wire         csr2ip_avmm_waitrequest,           //                    .waitrequest
		input  wire [31:0]  csr2ip_avmm_readdata,              //                    .readdata
		input  wire         csr2ip_avmm_readdatavalid,         //                    .readdatavalid
		output wire [31:0]  ip2csr_avmm_writedata,             //                    .writedata
		output wire [21:0]  ip2csr_avmm_address,               //                    .address
		output wire         ip2csr_avmm_write,                 //                    .write
		output wire         ip2csr_avmm_read,                  //                    .read
		output wire [3:0]   ip2csr_avmm_byteenable,            //                    .byteenable
		output wire         ip2cafu_avmm_clk,                  //            cafu_csr.clk
		output wire         ip2cafu_avmm_rstn,                 //                    .rstn
		input  wire         cafu2ip_avmm_waitrequest,          //                    .waitrequest
		input  wire [63:0]  cafu2ip_avmm_readdata,             //                    .readdata
		input  wire         cafu2ip_avmm_readdatavalid,        //                    .readdatavalid
		output wire         ip2cafu_avmm_burstcount,           //                    .burstcount
		output wire [63:0]  ip2cafu_avmm_writedata,            //                    .writedata
		output wire [21:0]  ip2cafu_avmm_address,              //                    .address
		output wire         ip2cafu_avmm_write,                //                    .write
		output wire         ip2cafu_avmm_read,                 //                    .read
		output wire [7:0]   ip2cafu_avmm_byteenable,           //                    .byteenable
		output wire [31:0]  ccv_afu_conf_base_addr_high,       //             ccv_afu.base_addr_high
		output wire         ccv_afu_conf_base_addr_high_valid, //                    .base_addr_high_valid
		output wire [31:0]  ccv_afu_conf_base_addr_low,        //                    .base_addr_low
		output wire         ccv_afu_conf_base_addr_low_valid,  //                    .base_addr_low_valid
		output wire         ip2uio_tx_ready,                   //          usr_tx_st0.ready
		input  wire         uio2ip_tx_st0_dvalid,              //                    .dvalid
		input  wire         uio2ip_tx_st0_sop,                 //                    .sop
		input  wire         uio2ip_tx_st0_eop,                 //                    .eop
		input  wire         uio2ip_tx_st0_passthrough,         //                    .passthrough
		input  wire [255:0] uio2ip_tx_st0_data,                //                    .data
		input  wire [7:0]   uio2ip_tx_st0_data_parity,         //                    .data_parity
		input  wire [127:0] uio2ip_tx_st0_hdr,                 //                    .hdr
		input  wire [3:0]   uio2ip_tx_st0_hdr_parity,          //                    .hdr_parity
		input  wire         uio2ip_tx_st0_hvalid,              //                    .hvalid
		input  wire [31:0]  uio2ip_tx_st0_prefix,              //                    .prefix
		input  wire [0:0]   uio2ip_tx_st0_prefix_parity,       //                    .prefix_parity
		input  wire [11:0]  uio2ip_tx_st0_RSSAI_prefix,        //                    .RSSAI_prefix
		input  wire         uio2ip_tx_st0_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		input  wire [1:0]   uio2ip_tx_st0_pvalid,              //                    .pvalid
		input  wire         uio2ip_tx_st0_vfactive,            //                    .vfactive
		input  wire [10:0]  uio2ip_tx_st0_vfnum,               //                    .vfnum
		input  wire [2:0]   uio2ip_tx_st0_pfnum,               //                    .pfnum
		input  wire [0:0]   uio2ip_tx_st0_chnum,               //                    .chnum
		input  wire [2:0]   uio2ip_tx_st0_empty,               //                    .empty
		input  wire         uio2ip_tx_st0_misc_parity,         //                    .misc_parity
		input  wire         uio2ip_tx_st1_dvalid,              //          usr_tx_st1.dvalid
		input  wire         uio2ip_tx_st1_sop,                 //                    .sop
		input  wire         uio2ip_tx_st1_eop,                 //                    .eop
		input  wire         uio2ip_tx_st1_passthrough,         //                    .passthrough
		input  wire [255:0] uio2ip_tx_st1_data,                //                    .data
		input  wire [7:0]   uio2ip_tx_st1_data_parity,         //                    .data_parity
		input  wire [127:0] uio2ip_tx_st1_hdr,                 //                    .hdr
		input  wire [3:0]   uio2ip_tx_st1_hdr_parity,          //                    .hdr_parity
		input  wire         uio2ip_tx_st1_hvalid,              //                    .hvalid
		input  wire [31:0]  uio2ip_tx_st1_prefix,              //                    .prefix
		input  wire [0:0]   uio2ip_tx_st1_prefix_parity,       //                    .prefix_parity
		input  wire [11:0]  uio2ip_tx_st1_RSSAI_prefix,        //                    .RSSAI_prefix
		input  wire         uio2ip_tx_st1_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		input  wire [1:0]   uio2ip_tx_st1_pvalid,              //                    .pvalid
		input  wire         uio2ip_tx_st1_vfactive,            //                    .vfactive
		input  wire [10:0]  uio2ip_tx_st1_vfnum,               //                    .vfnum
		input  wire [2:0]   uio2ip_tx_st1_pfnum,               //                    .pfnum
		input  wire [0:0]   uio2ip_tx_st1_chnum,               //                    .chnum
		input  wire [2:0]   uio2ip_tx_st1_empty,               //                    .empty
		input  wire         uio2ip_tx_st1_misc_parity,         //                    .misc_parity
		input  wire         uio2ip_tx_st2_dvalid,              //          usr_tx_st2.dvalid
		input  wire         uio2ip_tx_st2_sop,                 //                    .sop
		input  wire         uio2ip_tx_st2_eop,                 //                    .eop
		input  wire         uio2ip_tx_st2_passthrough,         //                    .passthrough
		input  wire [255:0] uio2ip_tx_st2_data,                //                    .data
		input  wire [7:0]   uio2ip_tx_st2_data_parity,         //                    .data_parity
		input  wire [127:0] uio2ip_tx_st2_hdr,                 //                    .hdr
		input  wire [3:0]   uio2ip_tx_st2_hdr_parity,          //                    .hdr_parity
		input  wire         uio2ip_tx_st2_hvalid,              //                    .hvalid
		input  wire [31:0]  uio2ip_tx_st2_prefix,              //                    .prefix
		input  wire [0:0]   uio2ip_tx_st2_prefix_parity,       //                    .prefix_parity
		input  wire [11:0]  uio2ip_tx_st2_RSSAI_prefix,        //                    .RSSAI_prefix
		input  wire         uio2ip_tx_st2_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		input  wire [1:0]   uio2ip_tx_st2_pvalid,              //                    .pvalid
		input  wire         uio2ip_tx_st2_vfactive,            //                    .vfactive
		input  wire [10:0]  uio2ip_tx_st2_vfnum,               //                    .vfnum
		input  wire [2:0]   uio2ip_tx_st2_pfnum,               //                    .pfnum
		input  wire [0:0]   uio2ip_tx_st2_chnum,               //                    .chnum
		input  wire [2:0]   uio2ip_tx_st2_empty,               //                    .empty
		input  wire         uio2ip_tx_st2_misc_parity,         //                    .misc_parity
		input  wire         uio2ip_tx_st3_dvalid,              //          usr_tx_st3.dvalid
		input  wire         uio2ip_tx_st3_sop,                 //                    .sop
		input  wire         uio2ip_tx_st3_eop,                 //                    .eop
		input  wire         uio2ip_tx_st3_passthrough,         //                    .passthrough
		input  wire [255:0] uio2ip_tx_st3_data,                //                    .data
		input  wire [7:0]   uio2ip_tx_st3_data_parity,         //                    .data_parity
		input  wire [127:0] uio2ip_tx_st3_hdr,                 //                    .hdr
		input  wire [3:0]   uio2ip_tx_st3_hdr_parity,          //                    .hdr_parity
		input  wire         uio2ip_tx_st3_hvalid,              //                    .hvalid
		input  wire [31:0]  uio2ip_tx_st3_prefix,              //                    .prefix
		input  wire [0:0]   uio2ip_tx_st3_prefix_parity,       //                    .prefix_parity
		input  wire [11:0]  uio2ip_tx_st3_RSSAI_prefix,        //                    .RSSAI_prefix
		input  wire         uio2ip_tx_st3_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		input  wire [1:0]   uio2ip_tx_st3_pvalid,              //                    .pvalid
		input  wire         uio2ip_tx_st3_vfactive,            //                    .vfactive
		input  wire [10:0]  uio2ip_tx_st3_vfnum,               //                    .vfnum
		input  wire [2:0]   uio2ip_tx_st3_pfnum,               //                    .pfnum
		input  wire [0:0]   uio2ip_tx_st3_chnum,               //                    .chnum
		input  wire [2:0]   uio2ip_tx_st3_empty,               //                    .empty
		input  wire         uio2ip_tx_st3_misc_parity,         //                    .misc_parity
		output wire [2:0]   ip2uio_tx_st_Hcrdt_update,         //           usr_tx_st.Hcrdt_update
		output wire [0:0]   ip2uio_tx_st_Hcrdt_ch,             //                    .Hcrdt_ch
		output wire [5:0]   ip2uio_tx_st_Hcrdt_update_cnt,     //                    .Hcrdt_update_cnt
		output wire [2:0]   ip2uio_tx_st_Hcrdt_init,           //                    .Hcrdt_init
		input  wire [2:0]   uio2ip_tx_st_Hcrdt_init_ack,       //                    .Hcrdt_init_ack
		output wire [2:0]   ip2uio_tx_st_Dcrdt_update,         //                    .Dcrdt_update
		output wire [0:0]   ip2uio_tx_st_Dcrdt_ch,             //                    .Dcrdt_ch
		output wire [11:0]  ip2uio_tx_st_Dcrdt_update_cnt,     //                    .Dcrdt_update_cnt
		output wire [2:0]   ip2uio_tx_st_Dcrdt_init,           //                    .Dcrdt_init
		input  wire [2:0]   uio2ip_tx_st_Dcrdt_init_ack,       //                    .Dcrdt_init_ack
		output wire         ip2uio_rx_st0_dvalid,              //         usr_rx_st_0.dvalid
		output wire         ip2uio_rx_st0_sop,                 //                    .sop
		output wire         ip2uio_rx_st0_eop,                 //                    .eop
		output wire         ip2uio_rx_st0_passthrough,         //                    .passthrough
		output wire [255:0] ip2uio_rx_st0_data,                //                    .data
		output wire [7:0]   ip2uio_rx_st0_data_parity,         //                    .data_parity
		output wire [127:0] ip2uio_rx_st0_hdr,                 //                    .hdr
		output wire [3:0]   ip2uio_rx_st0_hdr_parity,          //                    .hdr_parity
		output wire         ip2uio_rx_st0_hvalid,              //                    .hvalid
		output wire [31:0]  ip2uio_rx_st0_prefix,              //                    .prefix
		output wire [0:0]   ip2uio_rx_st0_prefix_parity,       //                    .prefix_parity
		output wire [11:0]  ip2uio_rx_st0_RSSAI_prefix,        //                    .RSSAI_prefix
		output wire         ip2uio_rx_st0_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		output wire [1:0]   ip2uio_rx_st0_pvalid,              //                    .pvalid
		output wire [2:0]   ip2uio_rx_st0_bar,                 //                    .bar
		output wire         ip2uio_rx_st0_vfactive,            //                    .vfactive
		output wire [10:0]  ip2uio_rx_st0_vfnum,               //                    .vfnum
		output wire [2:0]   ip2uio_rx_st0_pfnum,               //                    .pfnum
		output wire [0:0]   ip2uio_rx_st0_chnum,               //                    .chnum
		output wire         ip2uio_rx_st0_misc_parity,         //                    .misc_parity
		output wire [2:0]   ip2uio_rx_st0_empty,               //                    .empty
		output wire         ip2uio_rx_st1_dvalid,              //         usr_rx_st_1.dvalid
		output wire         ip2uio_rx_st1_sop,                 //                    .sop
		output wire         ip2uio_rx_st1_eop,                 //                    .eop
		output wire         ip2uio_rx_st1_passthrough,         //                    .passthrough
		output wire [255:0] ip2uio_rx_st1_data,                //                    .data
		output wire [7:0]   ip2uio_rx_st1_data_parity,         //                    .data_parity
		output wire [127:0] ip2uio_rx_st1_hdr,                 //                    .hdr
		output wire [3:0]   ip2uio_rx_st1_hdr_parity,          //                    .hdr_parity
		output wire         ip2uio_rx_st1_hvalid,              //                    .hvalid
		output wire [31:0]  ip2uio_rx_st1_prefix,              //                    .prefix
		output wire [0:0]   ip2uio_rx_st1_prefix_parity,       //                    .prefix_parity
		output wire [11:0]  ip2uio_rx_st1_RSSAI_prefix,        //                    .RSSAI_prefix
		output wire         ip2uio_rx_st1_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		output wire [1:0]   ip2uio_rx_st1_pvalid,              //                    .pvalid
		output wire [2:0]   ip2uio_rx_st1_bar,                 //                    .bar
		output wire         ip2uio_rx_st1_vfactive,            //                    .vfactive
		output wire [10:0]  ip2uio_rx_st1_vfnum,               //                    .vfnum
		output wire [2:0]   ip2uio_rx_st1_pfnum,               //                    .pfnum
		output wire [0:0]   ip2uio_rx_st1_chnum,               //                    .chnum
		output wire         ip2uio_rx_st1_misc_parity,         //                    .misc_parity
		output wire [2:0]   ip2uio_rx_st1_empty,               //                    .empty
		output wire         ip2uio_rx_st2_dvalid,              //         usr_rx_st_2.dvalid
		output wire         ip2uio_rx_st2_sop,                 //                    .sop
		output wire         ip2uio_rx_st2_eop,                 //                    .eop
		output wire         ip2uio_rx_st2_passthrough,         //                    .passthrough
		output wire [255:0] ip2uio_rx_st2_data,                //                    .data
		output wire [7:0]   ip2uio_rx_st2_data_parity,         //                    .data_parity
		output wire [127:0] ip2uio_rx_st2_hdr,                 //                    .hdr
		output wire [3:0]   ip2uio_rx_st2_hdr_parity,          //                    .hdr_parity
		output wire         ip2uio_rx_st2_hvalid,              //                    .hvalid
		output wire [31:0]  ip2uio_rx_st2_prefix,              //                    .prefix
		output wire [0:0]   ip2uio_rx_st2_prefix_parity,       //                    .prefix_parity
		output wire [11:0]  ip2uio_rx_st2_RSSAI_prefix,        //                    .RSSAI_prefix
		output wire         ip2uio_rx_st2_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		output wire [1:0]   ip2uio_rx_st2_pvalid,              //                    .pvalid
		output wire [2:0]   ip2uio_rx_st2_bar,                 //                    .bar
		output wire         ip2uio_rx_st2_vfactive,            //                    .vfactive
		output wire [10:0]  ip2uio_rx_st2_vfnum,               //                    .vfnum
		output wire [2:0]   ip2uio_rx_st2_pfnum,               //                    .pfnum
		output wire [0:0]   ip2uio_rx_st2_chnum,               //                    .chnum
		output wire         ip2uio_rx_st2_misc_parity,         //                    .misc_parity
		output wire [2:0]   ip2uio_rx_st2_empty,               //                    .empty
		output wire         ip2uio_rx_st3_dvalid,              //         usr_rx_st_3.dvalid
		output wire         ip2uio_rx_st3_sop,                 //                    .sop
		output wire         ip2uio_rx_st3_eop,                 //                    .eop
		output wire         ip2uio_rx_st3_passthrough,         //                    .passthrough
		output wire [255:0] ip2uio_rx_st3_data,                //                    .data
		output wire [7:0]   ip2uio_rx_st3_data_parity,         //                    .data_parity
		output wire [127:0] ip2uio_rx_st3_hdr,                 //                    .hdr
		output wire [3:0]   ip2uio_rx_st3_hdr_parity,          //                    .hdr_parity
		output wire         ip2uio_rx_st3_hvalid,              //                    .hvalid
		output wire [31:0]  ip2uio_rx_st3_prefix,              //                    .prefix
		output wire [0:0]   ip2uio_rx_st3_prefix_parity,       //                    .prefix_parity
		output wire [11:0]  ip2uio_rx_st3_RSSAI_prefix,        //                    .RSSAI_prefix
		output wire         ip2uio_rx_st3_RSSAI_prefix_parity, //                    .RSSAI_prefix_parity
		output wire [1:0]   ip2uio_rx_st3_pvalid,              //                    .pvalid
		output wire [2:0]   ip2uio_rx_st3_bar,                 //                    .bar
		output wire         ip2uio_rx_st3_vfactive,            //                    .vfactive
		output wire [10:0]  ip2uio_rx_st3_vfnum,               //                    .vfnum
		output wire [2:0]   ip2uio_rx_st3_pfnum,               //                    .pfnum
		output wire [0:0]   ip2uio_rx_st3_chnum,               //                    .chnum
		output wire         ip2uio_rx_st3_misc_parity,         //                    .misc_parity
		output wire [2:0]   ip2uio_rx_st3_empty,               //                    .empty
		input  wire [2:0]   uio2ip_rx_st_Hcrdt_update,         //           usr_rx_st.Hcrdt_update
		input  wire [0:0]   uio2ip_rx_st_Hcrdt_ch,             //                    .Hcrdt_ch
		input  wire [5:0]   uio2ip_rx_st_Hcrdt_update_cnt,     //                    .Hcrdt_update_cnt
		input  wire [2:0]   uio2ip_rx_st_Hcrdt_init,           //                    .Hcrdt_init
		output wire [2:0]   ip2uio_rx_st_Hcrdt_init_ack,       //                    .Hcrdt_init_ack
		input  wire [2:0]   uio2ip_rx_st_Dcrdt_update,         //                    .Dcrdt_update
		input  wire [0:0]   uio2ip_rx_st_Dcrdt_ch,             //                    .Dcrdt_ch
		input  wire [11:0]  uio2ip_rx_st_Dcrdt_update_cnt,     //                    .Dcrdt_update_cnt
		input  wire [2:0]   uio2ip_rx_st_Dcrdt_init,           //                    .Dcrdt_init
		output wire [2:0]   ip2uio_rx_st_Dcrdt_init_ack,       //                    .Dcrdt_init_ack
		output wire [7:0]   ip2uio_bus_number,                 //                 uio.usr_bus_number
		output wire [4:0]   ip2uio_device_number               //                    .usr_device_number
	);

	cxl_ip_top #(
		.ADME_ENABLE (1)
	) intel_rtile_cxl_top_0 (
		.refclk0                           (refclk0),                           //   input,    width = 1,             refclk0.clk
		.refclk1                           (refclk1),                           //   input,    width = 1,             refclk1.clk
		.refclk4                           (refclk4),                           //   input,    width = 1,             refclk4.clk
		.resetn                            (resetn),                            //   input,    width = 1,              resetn.reset_n
		.nInit_done                        (nInit_done),                        //   input,    width = 1,          ninit_done.ninit_done
		.ip2hdm_clk                        (ip2hdm_clk),                        //  output,    width = 1,          ip2hdm_clk.clk
		.ip2hdm_reset_n                    (ip2hdm_reset_n),                    //  output,    width = 1,      ip2hdm_reset_n.reset_n
		.cxl_warm_rst_n                    (cxl_warm_rst_n),                    //  output,    width = 1,      cxl_warm_rst_n.reset_n
		.cxl_cold_rst_n                    (cxl_cold_rst_n),                    //  output,    width = 1,      cxl_cold_rst_n.reset_n
		.hdm_size_256mb                    (hdm_size_256mb),                    //   input,   width = 36,            hdm_size.hdm_size_t
		.mc2ip_memsize                     (mc2ip_memsize),                     //   input,   width = 64,                    .mem_size_t
		.cxl_rx_n                          (cxl_rx_n),                          //   input,   width = 16,              cxl_rx.cxl_rx_n
		.cxl_rx_p                          (cxl_rx_p),                          //   input,   width = 16,                    .cxl_rx_p
		.cxl_tx_n                          (cxl_tx_n),                          //  output,   width = 16,              cxl_tx.cxl_tx_n
		.cxl_tx_p                          (cxl_tx_p),                          //  output,   width = 16,                    .cxl_tx_p
		.mc2ip_0_sr_status                 (mc2ip_0_sr_status),                 //   input,    width = 5,             mc2ip_0.mc_sr_status
		.mc2ip_0_rspfifo_full              (mc2ip_0_rspfifo_full),              //   input,    width = 1,                    .rspfifo_full
		.mc2ip_0_rspfifo_empty             (mc2ip_0_rspfifo_empty),             //   input,    width = 1,                    .rspfifo_empty
		.mc2ip_0_rspfifo_fill_level        (mc2ip_0_rspfifo_fill_level),        //   input,    width = 6,                    .rspfifo_fill_level
		.mc2ip_0_reqfifo_full              (mc2ip_0_reqfifo_full),              //   input,    width = 1,                    .reqfifo_full
		.mc2ip_0_reqfifo_empty             (mc2ip_0_reqfifo_empty),             //   input,    width = 1,                    .reqfifo_empty
		.mc2ip_0_reqfifo_fill_level        (mc2ip_0_reqfifo_fill_level),        //   input,    width = 6,                    .reqfifo_fill_level
		.hdm2ip_avmm0_cxlmem_ready         (hdm2ip_avmm0_cxlmem_ready),         //   input,    width = 1,            hdm2ip_0.cxlmem_ready
		.hdm2ip_avmm0_ready                (hdm2ip_avmm0_ready),                //   input,    width = 1,                    .ready
		.hdm2ip_avmm0_readdata             (hdm2ip_avmm0_readdata),             //   input,  width = 512,                    .readdata
		.hdm2ip_avmm0_rsp_mdata            (hdm2ip_avmm0_rsp_mdata),            //   input,   width = 14,                    .rsp_mdata
		.hdm2ip_avmm0_read_poison          (hdm2ip_avmm0_read_poison),          //   input,    width = 1,                    .read_poison
		.hdm2ip_avmm0_readdatavalid        (hdm2ip_avmm0_readdatavalid),        //   input,    width = 1,                    .readdatavalid
		.hdm2ip_avmm0_ecc_err_corrected    (hdm2ip_avmm0_ecc_err_corrected),    //   input,    width = 8,                    .ecc_err_corrected
		.hdm2ip_avmm0_ecc_err_detected     (hdm2ip_avmm0_ecc_err_detected),     //   input,    width = 8,                    .ecc_err_detected
		.hdm2ip_avmm0_ecc_err_fatal        (hdm2ip_avmm0_ecc_err_fatal),        //   input,    width = 8,                    .ecc_err_fatal
		.hdm2ip_avmm0_ecc_err_syn_e        (hdm2ip_avmm0_ecc_err_syn_e),        //   input,    width = 8,                    .ecc_err_syn_e
		.hdm2ip_avmm0_ecc_err_valid        (hdm2ip_avmm0_ecc_err_valid),        //   input,    width = 1,                    .ecc_err_valid
		.ip2hdm_avmm0_read                 (ip2hdm_avmm0_read),                 //  output,    width = 1,            ip2hdm_0.read
		.ip2hdm_avmm0_write                (ip2hdm_avmm0_write),                //  output,    width = 1,                    .write
		.ip2hdm_avmm0_write_poison         (ip2hdm_avmm0_write_poison),         //  output,    width = 1,                    .write_poison
		.ip2hdm_avmm0_write_ras_sbe        (ip2hdm_avmm0_write_ras_sbe),        //  output,    width = 1,                    .write_ras_sbe
		.ip2hdm_avmm0_write_ras_dbe        (ip2hdm_avmm0_write_ras_dbe),        //  output,    width = 1,                    .write_ras_dbe
		.ip2hdm_avmm0_writedata            (ip2hdm_avmm0_writedata),            //  output,  width = 512,                    .writedata
		.ip2hdm_avmm0_byteenable           (ip2hdm_avmm0_byteenable),           //  output,   width = 64,                    .byteenable
		.ip2hdm_avmm0_address              (ip2hdm_avmm0_address),              //  output,   width = 46,                    .address
		.ip2hdm_avmm0_req_mdata            (ip2hdm_avmm0_req_mdata),            //  output,   width = 14,                    .req_mdata
		.mc2ip_1_sr_status                 (mc2ip_1_sr_status),                 //   input,    width = 5,             mc2ip_1.mc_sr_status
		.mc2ip_1_rspfifo_full              (mc2ip_1_rspfifo_full),              //   input,    width = 1,                    .rspfifo_full
		.mc2ip_1_rspfifo_empty             (mc2ip_1_rspfifo_empty),             //   input,    width = 1,                    .rspfifo_empty
		.mc2ip_1_rspfifo_fill_level        (mc2ip_1_rspfifo_fill_level),        //   input,    width = 6,                    .rspfifo_fill_level
		.mc2ip_1_reqfifo_full              (mc2ip_1_reqfifo_full),              //   input,    width = 1,                    .reqfifo_full
		.mc2ip_1_reqfifo_empty             (mc2ip_1_reqfifo_empty),             //   input,    width = 1,                    .reqfifo_empty
		.mc2ip_1_reqfifo_fill_level        (mc2ip_1_reqfifo_fill_level),        //   input,    width = 6,                    .reqfifo_fill_level
		.hdm2ip_avmm1_cxlmem_ready         (hdm2ip_avmm1_cxlmem_ready),         //   input,    width = 1,            hdm2ip_1.cxlmem_ready
		.hdm2ip_avmm1_ready                (hdm2ip_avmm1_ready),                //   input,    width = 1,                    .ready
		.hdm2ip_avmm1_readdata             (hdm2ip_avmm1_readdata),             //   input,  width = 512,                    .readdata
		.hdm2ip_avmm1_rsp_mdata            (hdm2ip_avmm1_rsp_mdata),            //   input,   width = 14,                    .rsp_mdata
		.hdm2ip_avmm1_read_poison          (hdm2ip_avmm1_read_poison),          //   input,    width = 1,                    .read_poison
		.hdm2ip_avmm1_readdatavalid        (hdm2ip_avmm1_readdatavalid),        //   input,    width = 1,                    .readdatavalid
		.hdm2ip_avmm1_ecc_err_corrected    (hdm2ip_avmm1_ecc_err_corrected),    //   input,    width = 8,                    .ecc_err_corrected
		.hdm2ip_avmm1_ecc_err_detected     (hdm2ip_avmm1_ecc_err_detected),     //   input,    width = 8,                    .ecc_err_detected
		.hdm2ip_avmm1_ecc_err_fatal        (hdm2ip_avmm1_ecc_err_fatal),        //   input,    width = 8,                    .ecc_err_fatal
		.hdm2ip_avmm1_ecc_err_syn_e        (hdm2ip_avmm1_ecc_err_syn_e),        //   input,    width = 8,                    .ecc_err_syn_e
		.hdm2ip_avmm1_ecc_err_valid        (hdm2ip_avmm1_ecc_err_valid),        //   input,    width = 1,                    .ecc_err_valid
		.ip2hdm_avmm1_read                 (ip2hdm_avmm1_read),                 //  output,    width = 1,            ip2hdm_1.read
		.ip2hdm_avmm1_write                (ip2hdm_avmm1_write),                //  output,    width = 1,                    .write
		.ip2hdm_avmm1_write_poison         (ip2hdm_avmm1_write_poison),         //  output,    width = 1,                    .write_poison
		.ip2hdm_avmm1_write_ras_sbe        (ip2hdm_avmm1_write_ras_sbe),        //  output,    width = 1,                    .write_ras_sbe
		.ip2hdm_avmm1_write_ras_dbe        (ip2hdm_avmm1_write_ras_dbe),        //  output,    width = 1,                    .write_ras_dbe
		.ip2hdm_avmm1_writedata            (ip2hdm_avmm1_writedata),            //  output,  width = 512,                    .writedata
		.ip2hdm_avmm1_byteenable           (ip2hdm_avmm1_byteenable),           //  output,   width = 64,                    .byteenable
		.ip2hdm_avmm1_address              (ip2hdm_avmm1_address),              //  output,   width = 46,                    .address
		.ip2hdm_avmm1_req_mdata            (ip2hdm_avmm1_req_mdata),            //  output,   width = 14,                    .req_mdata
		.afu_cam_ext5                      (afu_cam_ext5),                      //   input,    width = 1,         afu2cam_ext.ext5
		.afu_cam_ext6                      (afu_cam_ext6),                      //   input,    width = 1,                    .ext6
		.cam_afu_ext5                      (cam_afu_ext5),                      //  output,    width = 1,         cam2afu_ext.ext5
		.cam_afu_ext6                      (cam_afu_ext6),                      //  output,    width = 1,                    .ext6
		.resetprep_en                      (resetprep_en),                      //  output,    width = 1,             quiesce.resetprep_en
		.bfe_afu_quiesce_req               (bfe_afu_quiesce_req),               //  output,    width = 1,                    .quiesce_req
		.afu_bfe_quiesce_ack               (afu_bfe_quiesce_ack),               //   input,    width = 1,                    .quiesce_ack
		.cafu2ip_aximm0_awid               (cafu2ip_aximm0_awid),               //   input,   width = 12, axi2ccip_wraddr_ch0.awid
		.cafu2ip_aximm0_awaddr             (cafu2ip_aximm0_awaddr),             //   input,   width = 64,                    .awaddr
		.cafu2ip_aximm0_awlen              (cafu2ip_aximm0_awlen),              //   input,   width = 10,                    .awlen
		.cafu2ip_aximm0_awsize             (cafu2ip_aximm0_awsize),             //   input,    width = 3,                    .awsize
		.cafu2ip_aximm0_awburst            (cafu2ip_aximm0_awburst),            //   input,    width = 2,                    .awburst
		.cafu2ip_aximm0_awprot             (cafu2ip_aximm0_awprot),             //   input,    width = 3,                    .awprot
		.cafu2ip_aximm0_awqos              (cafu2ip_aximm0_awqos),              //   input,    width = 4,                    .awqos
		.cafu2ip_aximm0_awuser             (cafu2ip_aximm0_awuser),             //   input,    width = 5,                    .awuser
		.cafu2ip_aximm0_awvalid            (cafu2ip_aximm0_awvalid),            //   input,    width = 1,                    .awvalid
		.cafu2ip_aximm0_awcache            (cafu2ip_aximm0_awcache),            //   input,    width = 4,                    .awcache
		.cafu2ip_aximm0_awlock             (cafu2ip_aximm0_awlock),             //   input,    width = 2,                    .awlock
		.cafu2ip_aximm0_awregion           (cafu2ip_aximm0_awregion),           //   input,    width = 4,                    .awregion
		.ip2cafu_aximm0_awready            (ip2cafu_aximm0_awready),            //  output,    width = 1,                    .awready
		.cafu2ip_aximm1_awid               (cafu2ip_aximm1_awid),               //   input,   width = 12, axi2ccip_wraddr_ch1.awid
		.cafu2ip_aximm1_awaddr             (cafu2ip_aximm1_awaddr),             //   input,   width = 64,                    .awaddr
		.cafu2ip_aximm1_awlen              (cafu2ip_aximm1_awlen),              //   input,   width = 10,                    .awlen
		.cafu2ip_aximm1_awsize             (cafu2ip_aximm1_awsize),             //   input,    width = 3,                    .awsize
		.cafu2ip_aximm1_awburst            (cafu2ip_aximm1_awburst),            //   input,    width = 2,                    .awburst
		.cafu2ip_aximm1_awprot             (cafu2ip_aximm1_awprot),             //   input,    width = 3,                    .awprot
		.cafu2ip_aximm1_awqos              (cafu2ip_aximm1_awqos),              //   input,    width = 4,                    .awqos
		.cafu2ip_aximm1_awuser             (cafu2ip_aximm1_awuser),             //   input,    width = 5,                    .awuser
		.cafu2ip_aximm1_awvalid            (cafu2ip_aximm1_awvalid),            //   input,    width = 1,                    .awvalid
		.cafu2ip_aximm1_awcache            (cafu2ip_aximm1_awcache),            //   input,    width = 4,                    .awcache
		.cafu2ip_aximm1_awlock             (cafu2ip_aximm1_awlock),             //   input,    width = 2,                    .awlock
		.cafu2ip_aximm1_awregion           (cafu2ip_aximm1_awregion),           //   input,    width = 4,                    .awregion
		.ip2cafu_aximm1_awready            (ip2cafu_aximm1_awready),            //  output,    width = 1,                    .awready
		.cafu2ip_aximm0_wdata              (cafu2ip_aximm0_wdata),              //   input,  width = 512, axi2ccip_wrdata_ch0.wdata
		.cafu2ip_aximm0_wstrb              (cafu2ip_aximm0_wstrb),              //   input,   width = 64,                    .wstrb
		.cafu2ip_aximm0_wlast              (cafu2ip_aximm0_wlast),              //   input,    width = 1,                    .wlast
		.cafu2ip_aximm0_wuser              (cafu2ip_aximm0_wuser),              //   input,    width = 1,                    .wuser
		.cafu2ip_aximm0_wvalid             (cafu2ip_aximm0_wvalid),             //   input,    width = 1,                    .wvalid
		.ip2cafu_aximm0_wready             (ip2cafu_aximm0_wready),             //  output,    width = 1,                    .wready
		.cafu2ip_aximm1_wdata              (cafu2ip_aximm1_wdata),              //   input,  width = 512, axi2ccip_wrdata_ch1.wdata
		.cafu2ip_aximm1_wstrb              (cafu2ip_aximm1_wstrb),              //   input,   width = 64,                    .wstrb
		.cafu2ip_aximm1_wlast              (cafu2ip_aximm1_wlast),              //   input,    width = 1,                    .wlast
		.cafu2ip_aximm1_wuser              (cafu2ip_aximm1_wuser),              //   input,    width = 1,                    .wuser
		.cafu2ip_aximm1_wvalid             (cafu2ip_aximm1_wvalid),             //   input,    width = 1,                    .wvalid
		.ip2cafu_aximm1_wready             (ip2cafu_aximm1_wready),             //  output,    width = 1,                    .wready
		.ip2cafu_aximm0_bid                (ip2cafu_aximm0_bid),                //  output,   width = 12,  axi2ccip_wrrsp_ch0.bid
		.ip2cafu_aximm0_bresp              (ip2cafu_aximm0_bresp),              //  output,    width = 2,                    .bresp
		.ip2cafu_aximm0_buser              (ip2cafu_aximm0_buser),              //  output,    width = 4,                    .buser
		.ip2cafu_aximm0_bvalid             (ip2cafu_aximm0_bvalid),             //  output,    width = 1,                    .bvalid
		.cafu2ip_aximm0_bready             (cafu2ip_aximm0_bready),             //   input,    width = 1,                    .bready
		.ip2cafu_aximm1_bid                (ip2cafu_aximm1_bid),                //  output,   width = 12,  axi2ccip_wrrsp_ch1.bid
		.ip2cafu_aximm1_bresp              (ip2cafu_aximm1_bresp),              //  output,    width = 2,                    .bresp
		.ip2cafu_aximm1_buser              (ip2cafu_aximm1_buser),              //  output,    width = 4,                    .buser
		.ip2cafu_aximm1_bvalid             (ip2cafu_aximm1_bvalid),             //  output,    width = 1,                    .bvalid
		.cafu2ip_aximm1_bready             (cafu2ip_aximm1_bready),             //   input,    width = 1,                    .bready
		.cafu2ip_aximm0_arid               (cafu2ip_aximm0_arid),               //   input,   width = 12, axi2ccip_rdaddr_ch0.arid
		.cafu2ip_aximm0_araddr             (cafu2ip_aximm0_araddr),             //   input,   width = 64,                    .araddr
		.cafu2ip_aximm0_arlen              (cafu2ip_aximm0_arlen),              //   input,   width = 10,                    .arlen
		.cafu2ip_aximm0_arsize             (cafu2ip_aximm0_arsize),             //   input,    width = 3,                    .arsize
		.cafu2ip_aximm0_arburst            (cafu2ip_aximm0_arburst),            //   input,    width = 2,                    .arburst
		.cafu2ip_aximm0_arprot             (cafu2ip_aximm0_arprot),             //   input,    width = 3,                    .arprot
		.cafu2ip_aximm0_arqos              (cafu2ip_aximm0_arqos),              //   input,    width = 4,                    .arqos
		.cafu2ip_aximm0_aruser             (cafu2ip_aximm0_aruser),             //   input,    width = 5,                    .aruser
		.cafu2ip_aximm0_arvalid            (cafu2ip_aximm0_arvalid),            //   input,    width = 1,                    .arvalid
		.cafu2ip_aximm0_arcache            (cafu2ip_aximm0_arcache),            //   input,    width = 4,                    .arcache
		.cafu2ip_aximm0_arlock             (cafu2ip_aximm0_arlock),             //   input,    width = 2,                    .arlock
		.cafu2ip_aximm0_arregion           (cafu2ip_aximm0_arregion),           //   input,    width = 4,                    .arregion
		.ip2cafu_aximm0_arready            (ip2cafu_aximm0_arready),            //  output,    width = 1,                    .arready
		.cafu2ip_aximm1_arid               (cafu2ip_aximm1_arid),               //   input,   width = 12, axi2ccip_rdaddr_ch1.arid
		.cafu2ip_aximm1_araddr             (cafu2ip_aximm1_araddr),             //   input,   width = 64,                    .araddr
		.cafu2ip_aximm1_arlen              (cafu2ip_aximm1_arlen),              //   input,   width = 10,                    .arlen
		.cafu2ip_aximm1_arsize             (cafu2ip_aximm1_arsize),             //   input,    width = 3,                    .arsize
		.cafu2ip_aximm1_arburst            (cafu2ip_aximm1_arburst),            //   input,    width = 2,                    .arburst
		.cafu2ip_aximm1_arprot             (cafu2ip_aximm1_arprot),             //   input,    width = 3,                    .arprot
		.cafu2ip_aximm1_arqos              (cafu2ip_aximm1_arqos),              //   input,    width = 4,                    .arqos
		.cafu2ip_aximm1_aruser             (cafu2ip_aximm1_aruser),             //   input,    width = 5,                    .aruser
		.cafu2ip_aximm1_arvalid            (cafu2ip_aximm1_arvalid),            //   input,    width = 1,                    .arvalid
		.cafu2ip_aximm1_arcache            (cafu2ip_aximm1_arcache),            //   input,    width = 4,                    .arcache
		.cafu2ip_aximm1_arlock             (cafu2ip_aximm1_arlock),             //   input,    width = 2,                    .arlock
		.cafu2ip_aximm1_arregion           (cafu2ip_aximm1_arregion),           //   input,    width = 4,                    .arregion
		.ip2cafu_aximm1_arready            (ip2cafu_aximm1_arready),            //  output,    width = 1,                    .arready
		.ip2cafu_aximm0_rid                (ip2cafu_aximm0_rid),                //  output,   width = 12,  axi2ccip_rdrsp_ch0.rid
		.ip2cafu_aximm0_rdata              (ip2cafu_aximm0_rdata),              //  output,  width = 512,                    .rdata
		.ip2cafu_aximm0_rresp              (ip2cafu_aximm0_rresp),              //  output,    width = 2,                    .rresp
		.ip2cafu_aximm0_rlast              (ip2cafu_aximm0_rlast),              //  output,    width = 1,                    .rlast
		.ip2cafu_aximm0_ruser              (ip2cafu_aximm0_ruser),              //  output,    width = 1,                    .ruser
		.ip2cafu_aximm0_rvalid             (ip2cafu_aximm0_rvalid),             //  output,    width = 1,                    .rvalid
		.cafu2ip_aximm0_rready             (cafu2ip_aximm0_rready),             //   input,    width = 1,                    .rready
		.ip2cafu_aximm1_rid                (ip2cafu_aximm1_rid),                //  output,   width = 12,  axi2ccip_rdrsp_ch1.rid
		.ip2cafu_aximm1_rdata              (ip2cafu_aximm1_rdata),              //  output,  width = 512,                    .rdata
		.ip2cafu_aximm1_rresp              (ip2cafu_aximm1_rresp),              //  output,    width = 2,                    .rresp
		.ip2cafu_aximm1_rlast              (ip2cafu_aximm1_rlast),              //  output,    width = 1,                    .rlast
		.ip2cafu_aximm1_ruser              (ip2cafu_aximm1_ruser),              //  output,    width = 1,                    .ruser
		.ip2cafu_aximm1_rvalid             (ip2cafu_aximm1_rvalid),             //  output,    width = 1,                    .rvalid
		.cafu2ip_aximm1_rready             (cafu2ip_aximm1_rready),             //   input,    width = 1,                    .rready
		.ip2csr_avmm_clk                   (ip2csr_avmm_clk),                   //  output,    width = 1,             afu_csr.clk
		.ip2csr_avmm_rstn                  (ip2csr_avmm_rstn),                  //  output,    width = 1,                    .rst_n
		.csr2ip_avmm_waitrequest           (csr2ip_avmm_waitrequest),           //   input,    width = 1,                    .waitrequest
		.csr2ip_avmm_readdata              (csr2ip_avmm_readdata),              //   input,   width = 32,                    .readdata
		.csr2ip_avmm_readdatavalid         (csr2ip_avmm_readdatavalid),         //   input,    width = 1,                    .readdatavalid
		.ip2csr_avmm_writedata             (ip2csr_avmm_writedata),             //  output,   width = 32,                    .writedata
		.ip2csr_avmm_address               (ip2csr_avmm_address),               //  output,   width = 22,                    .address
		.ip2csr_avmm_write                 (ip2csr_avmm_write),                 //  output,    width = 1,                    .write
		.ip2csr_avmm_read                  (ip2csr_avmm_read),                  //  output,    width = 1,                    .read
		.ip2csr_avmm_byteenable            (ip2csr_avmm_byteenable),            //  output,    width = 4,                    .byteenable
		.ip2cafu_avmm_clk                  (ip2cafu_avmm_clk),                  //  output,    width = 1,            cafu_csr.clk
		.ip2cafu_avmm_rstn                 (ip2cafu_avmm_rstn),                 //  output,    width = 1,                    .rstn
		.cafu2ip_avmm_waitrequest          (cafu2ip_avmm_waitrequest),          //   input,    width = 1,                    .waitrequest
		.cafu2ip_avmm_readdata             (cafu2ip_avmm_readdata),             //   input,   width = 64,                    .readdata
		.cafu2ip_avmm_readdatavalid        (cafu2ip_avmm_readdatavalid),        //   input,    width = 1,                    .readdatavalid
		.ip2cafu_avmm_burstcount           (ip2cafu_avmm_burstcount),           //  output,    width = 1,                    .burstcount
		.ip2cafu_avmm_writedata            (ip2cafu_avmm_writedata),            //  output,   width = 64,                    .writedata
		.ip2cafu_avmm_address              (ip2cafu_avmm_address),              //  output,   width = 22,                    .address
		.ip2cafu_avmm_write                (ip2cafu_avmm_write),                //  output,    width = 1,                    .write
		.ip2cafu_avmm_read                 (ip2cafu_avmm_read),                 //  output,    width = 1,                    .read
		.ip2cafu_avmm_byteenable           (ip2cafu_avmm_byteenable),           //  output,    width = 8,                    .byteenable
		.ccv_afu_conf_base_addr_high       (ccv_afu_conf_base_addr_high),       //  output,   width = 32,             ccv_afu.base_addr_high
		.ccv_afu_conf_base_addr_high_valid (ccv_afu_conf_base_addr_high_valid), //  output,    width = 1,                    .base_addr_high_valid
		.ccv_afu_conf_base_addr_low        (ccv_afu_conf_base_addr_low),        //  output,   width = 32,                    .base_addr_low
		.ccv_afu_conf_base_addr_low_valid  (ccv_afu_conf_base_addr_low_valid),  //  output,    width = 1,                    .base_addr_low_valid
		.ip2uio_tx_ready                   (ip2uio_tx_ready),                   //  output,    width = 1,          usr_tx_st0.ready
		.uio2ip_tx_st0_dvalid              (uio2ip_tx_st0_dvalid),              //   input,    width = 1,                    .dvalid
		.uio2ip_tx_st0_sop                 (uio2ip_tx_st0_sop),                 //   input,    width = 1,                    .sop
		.uio2ip_tx_st0_eop                 (uio2ip_tx_st0_eop),                 //   input,    width = 1,                    .eop
		.uio2ip_tx_st0_passthrough         (uio2ip_tx_st0_passthrough),         //   input,    width = 1,                    .passthrough
		.uio2ip_tx_st0_data                (uio2ip_tx_st0_data),                //   input,  width = 256,                    .data
		.uio2ip_tx_st0_data_parity         (uio2ip_tx_st0_data_parity),         //   input,    width = 8,                    .data_parity
		.uio2ip_tx_st0_hdr                 (uio2ip_tx_st0_hdr),                 //   input,  width = 128,                    .hdr
		.uio2ip_tx_st0_hdr_parity          (uio2ip_tx_st0_hdr_parity),          //   input,    width = 4,                    .hdr_parity
		.uio2ip_tx_st0_hvalid              (uio2ip_tx_st0_hvalid),              //   input,    width = 1,                    .hvalid
		.uio2ip_tx_st0_prefix              (uio2ip_tx_st0_prefix),              //   input,   width = 32,                    .prefix
		.uio2ip_tx_st0_prefix_parity       (uio2ip_tx_st0_prefix_parity),       //   input,    width = 1,                    .prefix_parity
		.uio2ip_tx_st0_RSSAI_prefix        (uio2ip_tx_st0_RSSAI_prefix),        //   input,   width = 12,                    .RSSAI_prefix
		.uio2ip_tx_st0_RSSAI_prefix_parity (uio2ip_tx_st0_RSSAI_prefix_parity), //   input,    width = 1,                    .RSSAI_prefix_parity
		.uio2ip_tx_st0_pvalid              (uio2ip_tx_st0_pvalid),              //   input,    width = 2,                    .pvalid
		.uio2ip_tx_st0_vfactive            (uio2ip_tx_st0_vfactive),            //   input,    width = 1,                    .vfactive
		.uio2ip_tx_st0_vfnum               (uio2ip_tx_st0_vfnum),               //   input,   width = 11,                    .vfnum
		.uio2ip_tx_st0_pfnum               (uio2ip_tx_st0_pfnum),               //   input,    width = 3,                    .pfnum
		.uio2ip_tx_st0_chnum               (uio2ip_tx_st0_chnum),               //   input,    width = 1,                    .chnum
		.uio2ip_tx_st0_empty               (uio2ip_tx_st0_empty),               //   input,    width = 3,                    .empty
		.uio2ip_tx_st0_misc_parity         (uio2ip_tx_st0_misc_parity),         //   input,    width = 1,                    .misc_parity
		.uio2ip_tx_st1_dvalid              (uio2ip_tx_st1_dvalid),              //   input,    width = 1,          usr_tx_st1.dvalid
		.uio2ip_tx_st1_sop                 (uio2ip_tx_st1_sop),                 //   input,    width = 1,                    .sop
		.uio2ip_tx_st1_eop                 (uio2ip_tx_st1_eop),                 //   input,    width = 1,                    .eop
		.uio2ip_tx_st1_passthrough         (uio2ip_tx_st1_passthrough),         //   input,    width = 1,                    .passthrough
		.uio2ip_tx_st1_data                (uio2ip_tx_st1_data),                //   input,  width = 256,                    .data
		.uio2ip_tx_st1_data_parity         (uio2ip_tx_st1_data_parity),         //   input,    width = 8,                    .data_parity
		.uio2ip_tx_st1_hdr                 (uio2ip_tx_st1_hdr),                 //   input,  width = 128,                    .hdr
		.uio2ip_tx_st1_hdr_parity          (uio2ip_tx_st1_hdr_parity),          //   input,    width = 4,                    .hdr_parity
		.uio2ip_tx_st1_hvalid              (uio2ip_tx_st1_hvalid),              //   input,    width = 1,                    .hvalid
		.uio2ip_tx_st1_prefix              (uio2ip_tx_st1_prefix),              //   input,   width = 32,                    .prefix
		.uio2ip_tx_st1_prefix_parity       (uio2ip_tx_st1_prefix_parity),       //   input,    width = 1,                    .prefix_parity
		.uio2ip_tx_st1_RSSAI_prefix        (uio2ip_tx_st1_RSSAI_prefix),        //   input,   width = 12,                    .RSSAI_prefix
		.uio2ip_tx_st1_RSSAI_prefix_parity (uio2ip_tx_st1_RSSAI_prefix_parity), //   input,    width = 1,                    .RSSAI_prefix_parity
		.uio2ip_tx_st1_pvalid              (uio2ip_tx_st1_pvalid),              //   input,    width = 2,                    .pvalid
		.uio2ip_tx_st1_vfactive            (uio2ip_tx_st1_vfactive),            //   input,    width = 1,                    .vfactive
		.uio2ip_tx_st1_vfnum               (uio2ip_tx_st1_vfnum),               //   input,   width = 11,                    .vfnum
		.uio2ip_tx_st1_pfnum               (uio2ip_tx_st1_pfnum),               //   input,    width = 3,                    .pfnum
		.uio2ip_tx_st1_chnum               (uio2ip_tx_st1_chnum),               //   input,    width = 1,                    .chnum
		.uio2ip_tx_st1_empty               (uio2ip_tx_st1_empty),               //   input,    width = 3,                    .empty
		.uio2ip_tx_st1_misc_parity         (uio2ip_tx_st1_misc_parity),         //   input,    width = 1,                    .misc_parity
		.uio2ip_tx_st2_dvalid              (uio2ip_tx_st2_dvalid),              //   input,    width = 1,          usr_tx_st2.dvalid
		.uio2ip_tx_st2_sop                 (uio2ip_tx_st2_sop),                 //   input,    width = 1,                    .sop
		.uio2ip_tx_st2_eop                 (uio2ip_tx_st2_eop),                 //   input,    width = 1,                    .eop
		.uio2ip_tx_st2_passthrough         (uio2ip_tx_st2_passthrough),         //   input,    width = 1,                    .passthrough
		.uio2ip_tx_st2_data                (uio2ip_tx_st2_data),                //   input,  width = 256,                    .data
		.uio2ip_tx_st2_data_parity         (uio2ip_tx_st2_data_parity),         //   input,    width = 8,                    .data_parity
		.uio2ip_tx_st2_hdr                 (uio2ip_tx_st2_hdr),                 //   input,  width = 128,                    .hdr
		.uio2ip_tx_st2_hdr_parity          (uio2ip_tx_st2_hdr_parity),          //   input,    width = 4,                    .hdr_parity
		.uio2ip_tx_st2_hvalid              (uio2ip_tx_st2_hvalid),              //   input,    width = 1,                    .hvalid
		.uio2ip_tx_st2_prefix              (uio2ip_tx_st2_prefix),              //   input,   width = 32,                    .prefix
		.uio2ip_tx_st2_prefix_parity       (uio2ip_tx_st2_prefix_parity),       //   input,    width = 1,                    .prefix_parity
		.uio2ip_tx_st2_RSSAI_prefix        (uio2ip_tx_st2_RSSAI_prefix),        //   input,   width = 12,                    .RSSAI_prefix
		.uio2ip_tx_st2_RSSAI_prefix_parity (uio2ip_tx_st2_RSSAI_prefix_parity), //   input,    width = 1,                    .RSSAI_prefix_parity
		.uio2ip_tx_st2_pvalid              (uio2ip_tx_st2_pvalid),              //   input,    width = 2,                    .pvalid
		.uio2ip_tx_st2_vfactive            (uio2ip_tx_st2_vfactive),            //   input,    width = 1,                    .vfactive
		.uio2ip_tx_st2_vfnum               (uio2ip_tx_st2_vfnum),               //   input,   width = 11,                    .vfnum
		.uio2ip_tx_st2_pfnum               (uio2ip_tx_st2_pfnum),               //   input,    width = 3,                    .pfnum
		.uio2ip_tx_st2_chnum               (uio2ip_tx_st2_chnum),               //   input,    width = 1,                    .chnum
		.uio2ip_tx_st2_empty               (uio2ip_tx_st2_empty),               //   input,    width = 3,                    .empty
		.uio2ip_tx_st2_misc_parity         (uio2ip_tx_st2_misc_parity),         //   input,    width = 1,                    .misc_parity
		.uio2ip_tx_st3_dvalid              (uio2ip_tx_st3_dvalid),              //   input,    width = 1,          usr_tx_st3.dvalid
		.uio2ip_tx_st3_sop                 (uio2ip_tx_st3_sop),                 //   input,    width = 1,                    .sop
		.uio2ip_tx_st3_eop                 (uio2ip_tx_st3_eop),                 //   input,    width = 1,                    .eop
		.uio2ip_tx_st3_passthrough         (uio2ip_tx_st3_passthrough),         //   input,    width = 1,                    .passthrough
		.uio2ip_tx_st3_data                (uio2ip_tx_st3_data),                //   input,  width = 256,                    .data
		.uio2ip_tx_st3_data_parity         (uio2ip_tx_st3_data_parity),         //   input,    width = 8,                    .data_parity
		.uio2ip_tx_st3_hdr                 (uio2ip_tx_st3_hdr),                 //   input,  width = 128,                    .hdr
		.uio2ip_tx_st3_hdr_parity          (uio2ip_tx_st3_hdr_parity),          //   input,    width = 4,                    .hdr_parity
		.uio2ip_tx_st3_hvalid              (uio2ip_tx_st3_hvalid),              //   input,    width = 1,                    .hvalid
		.uio2ip_tx_st3_prefix              (uio2ip_tx_st3_prefix),              //   input,   width = 32,                    .prefix
		.uio2ip_tx_st3_prefix_parity       (uio2ip_tx_st3_prefix_parity),       //   input,    width = 1,                    .prefix_parity
		.uio2ip_tx_st3_RSSAI_prefix        (uio2ip_tx_st3_RSSAI_prefix),        //   input,   width = 12,                    .RSSAI_prefix
		.uio2ip_tx_st3_RSSAI_prefix_parity (uio2ip_tx_st3_RSSAI_prefix_parity), //   input,    width = 1,                    .RSSAI_prefix_parity
		.uio2ip_tx_st3_pvalid              (uio2ip_tx_st3_pvalid),              //   input,    width = 2,                    .pvalid
		.uio2ip_tx_st3_vfactive            (uio2ip_tx_st3_vfactive),            //   input,    width = 1,                    .vfactive
		.uio2ip_tx_st3_vfnum               (uio2ip_tx_st3_vfnum),               //   input,   width = 11,                    .vfnum
		.uio2ip_tx_st3_pfnum               (uio2ip_tx_st3_pfnum),               //   input,    width = 3,                    .pfnum
		.uio2ip_tx_st3_chnum               (uio2ip_tx_st3_chnum),               //   input,    width = 1,                    .chnum
		.uio2ip_tx_st3_empty               (uio2ip_tx_st3_empty),               //   input,    width = 3,                    .empty
		.uio2ip_tx_st3_misc_parity         (uio2ip_tx_st3_misc_parity),         //   input,    width = 1,                    .misc_parity
		.ip2uio_tx_st_Hcrdt_update         (ip2uio_tx_st_Hcrdt_update),         //  output,    width = 3,           usr_tx_st.Hcrdt_update
		.ip2uio_tx_st_Hcrdt_ch             (ip2uio_tx_st_Hcrdt_ch),             //  output,    width = 1,                    .Hcrdt_ch
		.ip2uio_tx_st_Hcrdt_update_cnt     (ip2uio_tx_st_Hcrdt_update_cnt),     //  output,    width = 6,                    .Hcrdt_update_cnt
		.ip2uio_tx_st_Hcrdt_init           (ip2uio_tx_st_Hcrdt_init),           //  output,    width = 3,                    .Hcrdt_init
		.uio2ip_tx_st_Hcrdt_init_ack       (uio2ip_tx_st_Hcrdt_init_ack),       //   input,    width = 3,                    .Hcrdt_init_ack
		.ip2uio_tx_st_Dcrdt_update         (ip2uio_tx_st_Dcrdt_update),         //  output,    width = 3,                    .Dcrdt_update
		.ip2uio_tx_st_Dcrdt_ch             (ip2uio_tx_st_Dcrdt_ch),             //  output,    width = 1,                    .Dcrdt_ch
		.ip2uio_tx_st_Dcrdt_update_cnt     (ip2uio_tx_st_Dcrdt_update_cnt),     //  output,   width = 12,                    .Dcrdt_update_cnt
		.ip2uio_tx_st_Dcrdt_init           (ip2uio_tx_st_Dcrdt_init),           //  output,    width = 3,                    .Dcrdt_init
		.uio2ip_tx_st_Dcrdt_init_ack       (uio2ip_tx_st_Dcrdt_init_ack),       //   input,    width = 3,                    .Dcrdt_init_ack
		.ip2uio_rx_st0_dvalid              (ip2uio_rx_st0_dvalid),              //  output,    width = 1,         usr_rx_st_0.dvalid
		.ip2uio_rx_st0_sop                 (ip2uio_rx_st0_sop),                 //  output,    width = 1,                    .sop
		.ip2uio_rx_st0_eop                 (ip2uio_rx_st0_eop),                 //  output,    width = 1,                    .eop
		.ip2uio_rx_st0_passthrough         (ip2uio_rx_st0_passthrough),         //  output,    width = 1,                    .passthrough
		.ip2uio_rx_st0_data                (ip2uio_rx_st0_data),                //  output,  width = 256,                    .data
		.ip2uio_rx_st0_data_parity         (ip2uio_rx_st0_data_parity),         //  output,    width = 8,                    .data_parity
		.ip2uio_rx_st0_hdr                 (ip2uio_rx_st0_hdr),                 //  output,  width = 128,                    .hdr
		.ip2uio_rx_st0_hdr_parity          (ip2uio_rx_st0_hdr_parity),          //  output,    width = 4,                    .hdr_parity
		.ip2uio_rx_st0_hvalid              (ip2uio_rx_st0_hvalid),              //  output,    width = 1,                    .hvalid
		.ip2uio_rx_st0_prefix              (ip2uio_rx_st0_prefix),              //  output,   width = 32,                    .prefix
		.ip2uio_rx_st0_prefix_parity       (ip2uio_rx_st0_prefix_parity),       //  output,    width = 1,                    .prefix_parity
		.ip2uio_rx_st0_RSSAI_prefix        (ip2uio_rx_st0_RSSAI_prefix),        //  output,   width = 12,                    .RSSAI_prefix
		.ip2uio_rx_st0_RSSAI_prefix_parity (ip2uio_rx_st0_RSSAI_prefix_parity), //  output,    width = 1,                    .RSSAI_prefix_parity
		.ip2uio_rx_st0_pvalid              (ip2uio_rx_st0_pvalid),              //  output,    width = 2,                    .pvalid
		.ip2uio_rx_st0_bar                 (ip2uio_rx_st0_bar),                 //  output,    width = 3,                    .bar
		.ip2uio_rx_st0_vfactive            (ip2uio_rx_st0_vfactive),            //  output,    width = 1,                    .vfactive
		.ip2uio_rx_st0_vfnum               (ip2uio_rx_st0_vfnum),               //  output,   width = 11,                    .vfnum
		.ip2uio_rx_st0_pfnum               (ip2uio_rx_st0_pfnum),               //  output,    width = 3,                    .pfnum
		.ip2uio_rx_st0_chnum               (ip2uio_rx_st0_chnum),               //  output,    width = 1,                    .chnum
		.ip2uio_rx_st0_misc_parity         (ip2uio_rx_st0_misc_parity),         //  output,    width = 1,                    .misc_parity
		.ip2uio_rx_st0_empty               (ip2uio_rx_st0_empty),               //  output,    width = 3,                    .empty
		.ip2uio_rx_st1_dvalid              (ip2uio_rx_st1_dvalid),              //  output,    width = 1,         usr_rx_st_1.dvalid
		.ip2uio_rx_st1_sop                 (ip2uio_rx_st1_sop),                 //  output,    width = 1,                    .sop
		.ip2uio_rx_st1_eop                 (ip2uio_rx_st1_eop),                 //  output,    width = 1,                    .eop
		.ip2uio_rx_st1_passthrough         (ip2uio_rx_st1_passthrough),         //  output,    width = 1,                    .passthrough
		.ip2uio_rx_st1_data                (ip2uio_rx_st1_data),                //  output,  width = 256,                    .data
		.ip2uio_rx_st1_data_parity         (ip2uio_rx_st1_data_parity),         //  output,    width = 8,                    .data_parity
		.ip2uio_rx_st1_hdr                 (ip2uio_rx_st1_hdr),                 //  output,  width = 128,                    .hdr
		.ip2uio_rx_st1_hdr_parity          (ip2uio_rx_st1_hdr_parity),          //  output,    width = 4,                    .hdr_parity
		.ip2uio_rx_st1_hvalid              (ip2uio_rx_st1_hvalid),              //  output,    width = 1,                    .hvalid
		.ip2uio_rx_st1_prefix              (ip2uio_rx_st1_prefix),              //  output,   width = 32,                    .prefix
		.ip2uio_rx_st1_prefix_parity       (ip2uio_rx_st1_prefix_parity),       //  output,    width = 1,                    .prefix_parity
		.ip2uio_rx_st1_RSSAI_prefix        (ip2uio_rx_st1_RSSAI_prefix),        //  output,   width = 12,                    .RSSAI_prefix
		.ip2uio_rx_st1_RSSAI_prefix_parity (ip2uio_rx_st1_RSSAI_prefix_parity), //  output,    width = 1,                    .RSSAI_prefix_parity
		.ip2uio_rx_st1_pvalid              (ip2uio_rx_st1_pvalid),              //  output,    width = 2,                    .pvalid
		.ip2uio_rx_st1_bar                 (ip2uio_rx_st1_bar),                 //  output,    width = 3,                    .bar
		.ip2uio_rx_st1_vfactive            (ip2uio_rx_st1_vfactive),            //  output,    width = 1,                    .vfactive
		.ip2uio_rx_st1_vfnum               (ip2uio_rx_st1_vfnum),               //  output,   width = 11,                    .vfnum
		.ip2uio_rx_st1_pfnum               (ip2uio_rx_st1_pfnum),               //  output,    width = 3,                    .pfnum
		.ip2uio_rx_st1_chnum               (ip2uio_rx_st1_chnum),               //  output,    width = 1,                    .chnum
		.ip2uio_rx_st1_misc_parity         (ip2uio_rx_st1_misc_parity),         //  output,    width = 1,                    .misc_parity
		.ip2uio_rx_st1_empty               (ip2uio_rx_st1_empty),               //  output,    width = 3,                    .empty
		.ip2uio_rx_st2_dvalid              (ip2uio_rx_st2_dvalid),              //  output,    width = 1,         usr_rx_st_2.dvalid
		.ip2uio_rx_st2_sop                 (ip2uio_rx_st2_sop),                 //  output,    width = 1,                    .sop
		.ip2uio_rx_st2_eop                 (ip2uio_rx_st2_eop),                 //  output,    width = 1,                    .eop
		.ip2uio_rx_st2_passthrough         (ip2uio_rx_st2_passthrough),         //  output,    width = 1,                    .passthrough
		.ip2uio_rx_st2_data                (ip2uio_rx_st2_data),                //  output,  width = 256,                    .data
		.ip2uio_rx_st2_data_parity         (ip2uio_rx_st2_data_parity),         //  output,    width = 8,                    .data_parity
		.ip2uio_rx_st2_hdr                 (ip2uio_rx_st2_hdr),                 //  output,  width = 128,                    .hdr
		.ip2uio_rx_st2_hdr_parity          (ip2uio_rx_st2_hdr_parity),          //  output,    width = 4,                    .hdr_parity
		.ip2uio_rx_st2_hvalid              (ip2uio_rx_st2_hvalid),              //  output,    width = 1,                    .hvalid
		.ip2uio_rx_st2_prefix              (ip2uio_rx_st2_prefix),              //  output,   width = 32,                    .prefix
		.ip2uio_rx_st2_prefix_parity       (ip2uio_rx_st2_prefix_parity),       //  output,    width = 1,                    .prefix_parity
		.ip2uio_rx_st2_RSSAI_prefix        (ip2uio_rx_st2_RSSAI_prefix),        //  output,   width = 12,                    .RSSAI_prefix
		.ip2uio_rx_st2_RSSAI_prefix_parity (ip2uio_rx_st2_RSSAI_prefix_parity), //  output,    width = 1,                    .RSSAI_prefix_parity
		.ip2uio_rx_st2_pvalid              (ip2uio_rx_st2_pvalid),              //  output,    width = 2,                    .pvalid
		.ip2uio_rx_st2_bar                 (ip2uio_rx_st2_bar),                 //  output,    width = 3,                    .bar
		.ip2uio_rx_st2_vfactive            (ip2uio_rx_st2_vfactive),            //  output,    width = 1,                    .vfactive
		.ip2uio_rx_st2_vfnum               (ip2uio_rx_st2_vfnum),               //  output,   width = 11,                    .vfnum
		.ip2uio_rx_st2_pfnum               (ip2uio_rx_st2_pfnum),               //  output,    width = 3,                    .pfnum
		.ip2uio_rx_st2_chnum               (ip2uio_rx_st2_chnum),               //  output,    width = 1,                    .chnum
		.ip2uio_rx_st2_misc_parity         (ip2uio_rx_st2_misc_parity),         //  output,    width = 1,                    .misc_parity
		.ip2uio_rx_st2_empty               (ip2uio_rx_st2_empty),               //  output,    width = 3,                    .empty
		.ip2uio_rx_st3_dvalid              (ip2uio_rx_st3_dvalid),              //  output,    width = 1,         usr_rx_st_3.dvalid
		.ip2uio_rx_st3_sop                 (ip2uio_rx_st3_sop),                 //  output,    width = 1,                    .sop
		.ip2uio_rx_st3_eop                 (ip2uio_rx_st3_eop),                 //  output,    width = 1,                    .eop
		.ip2uio_rx_st3_passthrough         (ip2uio_rx_st3_passthrough),         //  output,    width = 1,                    .passthrough
		.ip2uio_rx_st3_data                (ip2uio_rx_st3_data),                //  output,  width = 256,                    .data
		.ip2uio_rx_st3_data_parity         (ip2uio_rx_st3_data_parity),         //  output,    width = 8,                    .data_parity
		.ip2uio_rx_st3_hdr                 (ip2uio_rx_st3_hdr),                 //  output,  width = 128,                    .hdr
		.ip2uio_rx_st3_hdr_parity          (ip2uio_rx_st3_hdr_parity),          //  output,    width = 4,                    .hdr_parity
		.ip2uio_rx_st3_hvalid              (ip2uio_rx_st3_hvalid),              //  output,    width = 1,                    .hvalid
		.ip2uio_rx_st3_prefix              (ip2uio_rx_st3_prefix),              //  output,   width = 32,                    .prefix
		.ip2uio_rx_st3_prefix_parity       (ip2uio_rx_st3_prefix_parity),       //  output,    width = 1,                    .prefix_parity
		.ip2uio_rx_st3_RSSAI_prefix        (ip2uio_rx_st3_RSSAI_prefix),        //  output,   width = 12,                    .RSSAI_prefix
		.ip2uio_rx_st3_RSSAI_prefix_parity (ip2uio_rx_st3_RSSAI_prefix_parity), //  output,    width = 1,                    .RSSAI_prefix_parity
		.ip2uio_rx_st3_pvalid              (ip2uio_rx_st3_pvalid),              //  output,    width = 2,                    .pvalid
		.ip2uio_rx_st3_bar                 (ip2uio_rx_st3_bar),                 //  output,    width = 3,                    .bar
		.ip2uio_rx_st3_vfactive            (ip2uio_rx_st3_vfactive),            //  output,    width = 1,                    .vfactive
		.ip2uio_rx_st3_vfnum               (ip2uio_rx_st3_vfnum),               //  output,   width = 11,                    .vfnum
		.ip2uio_rx_st3_pfnum               (ip2uio_rx_st3_pfnum),               //  output,    width = 3,                    .pfnum
		.ip2uio_rx_st3_chnum               (ip2uio_rx_st3_chnum),               //  output,    width = 1,                    .chnum
		.ip2uio_rx_st3_misc_parity         (ip2uio_rx_st3_misc_parity),         //  output,    width = 1,                    .misc_parity
		.ip2uio_rx_st3_empty               (ip2uio_rx_st3_empty),               //  output,    width = 3,                    .empty
		.uio2ip_rx_st_Hcrdt_update         (uio2ip_rx_st_Hcrdt_update),         //   input,    width = 3,           usr_rx_st.Hcrdt_update
		.uio2ip_rx_st_Hcrdt_ch             (uio2ip_rx_st_Hcrdt_ch),             //   input,    width = 1,                    .Hcrdt_ch
		.uio2ip_rx_st_Hcrdt_update_cnt     (uio2ip_rx_st_Hcrdt_update_cnt),     //   input,    width = 6,                    .Hcrdt_update_cnt
		.uio2ip_rx_st_Hcrdt_init           (uio2ip_rx_st_Hcrdt_init),           //   input,    width = 3,                    .Hcrdt_init
		.ip2uio_rx_st_Hcrdt_init_ack       (ip2uio_rx_st_Hcrdt_init_ack),       //  output,    width = 3,                    .Hcrdt_init_ack
		.uio2ip_rx_st_Dcrdt_update         (uio2ip_rx_st_Dcrdt_update),         //   input,    width = 3,                    .Dcrdt_update
		.uio2ip_rx_st_Dcrdt_ch             (uio2ip_rx_st_Dcrdt_ch),             //   input,    width = 1,                    .Dcrdt_ch
		.uio2ip_rx_st_Dcrdt_update_cnt     (uio2ip_rx_st_Dcrdt_update_cnt),     //   input,   width = 12,                    .Dcrdt_update_cnt
		.uio2ip_rx_st_Dcrdt_init           (uio2ip_rx_st_Dcrdt_init),           //   input,    width = 3,                    .Dcrdt_init
		.ip2uio_rx_st_Dcrdt_init_ack       (ip2uio_rx_st_Dcrdt_init_ack),       //  output,    width = 3,                    .Dcrdt_init_ack
		.ip2uio_bus_number                 (ip2uio_bus_number),                 //  output,    width = 8,                 uio.usr_bus_number
		.ip2uio_device_number              (ip2uio_device_number)               //  output,    width = 5,                    .usr_device_number
	);

endmodule
